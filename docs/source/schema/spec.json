{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Nivio Input Models",
    "description" : "The models used to generated landscapes and their components."
  },
  "paths" : { },
  "components" : {
    "schemas" : {
      "Branding" : {
        "type" : "object",
        "properties" : {
          "mapStylesheet" : {
            "type" : "string",
            "description" : "A resolvable URL pointing to a CSS stylesheet. This stylesheet is included in the generated SVG map. Use is to style the appearance of the map.",
            "example" : "https://acme.com/css/acme.css",
            "exampleSetFlag" : true
          }
        },
        "description" : "Map branding (tweaks visuals)",
        "exampleSetFlag" : false
      },
      "GroupDescription" : {
        "required" : [ "identifier" ],
        "type" : "object",
        "properties" : {
          "color" : {
            "type" : "string",
            "description" : "The HTML (hexcode only!) color used to draw the group and its items. If no color is given, one is computed.",
            "example" : "05ffaa",
            "exampleSetFlag" : true
          },
          "contact" : {
            "type" : "string",
            "description" : "A contact method, preferably email.",
            "exampleSetFlag" : false
          },
          "contains" : {
            "type" : "array",
            "description" : "A list of item identifiers or SQL-like queries to easily assign items to this group.",
            "example" : "identifier LIKE 'DB1'",
            "exampleSetFlag" : true,
            "items" : {
              "type" : "string",
              "description" : "A list of item identifiers or SQL-like queries to easily assign items to this group.",
              "example" : "identifier LIKE 'DB1'",
              "exampleSetFlag" : true
            }
          },
          "description" : {
            "type" : "string",
            "description" : "A brief description.",
            "exampleSetFlag" : false
          },
          "identifier" : {
            "type" : "string",
            "description" : "A unique identifier for the group (also used as name). Descriptions are merged based on the identifier.",
            "example" : "shipping",
            "exampleSetFlag" : true
          },
          "labels" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "exampleSetFlag" : false
            },
            "writeOnly" : true,
            "exampleSetFlag" : false
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Link"
            },
            "description" : "Key-value pairs of related links. Some keys like 'github' cause that the endpoint data is parsed and added to to corresponding landscape component.",
            "example" : "github: https://github.com/dedica-team/nivio",
            "exampleSetFlag" : true
          },
          "name" : {
            "type" : "string",
            "exampleSetFlag" : false
          },
          "owner" : {
            "type" : "string",
            "description" : "The business owner of the group.",
            "exampleSetFlag" : false
          }
        },
        "description" : "A group of items. Could be used as bounded context, for instance.",
        "exampleSetFlag" : false
      },
      "InterfaceDescription" : {
        "type" : "object",
        "properties" : {
          "deprecated" : {
            "type" : "boolean",
            "exampleSetFlag" : false
          },
          "description" : {
            "type" : "string",
            "description" : "A brief description.",
            "exampleSetFlag" : false
          },
          "format" : {
            "type" : "string",
            "description" : "The payload format.",
            "exampleSetFlag" : false
          },
          "name" : {
            "type" : "string",
            "exampleSetFlag" : false
          },
          "parameters" : {
            "type" : "string",
            "exampleSetFlag" : false
          },
          "path" : {
            "type" : "string",
            "exampleSetFlag" : false
          },
          "payload" : {
            "type" : "string",
            "exampleSetFlag" : false
          },
          "protection" : {
            "type" : "string",
            "description" : "A description of the interface protection method.",
            "exampleSetFlag" : false
          },
          "summary" : {
            "type" : "string",
            "exampleSetFlag" : false
          },
          "url" : {
            "type" : "string",
            "description" : "A URL describing the endpoint.",
            "format" : "url",
            "exampleSetFlag" : false
          }
        },
        "description" : "Describes a low-level interface of an item.",
        "exampleSetFlag" : false
      },
      "ItemDescription" : {
        "required" : [ "identifier" ],
        "type" : "object",
        "properties" : {
          "address" : {
            "type" : "string",
            "description" : "The technical address of the item (should be an URI). Taken into account when matching relation endpoints.",
            "exampleSetFlag" : false
          },
          "color" : {
            "type" : "string",
            "description" : "Overrides the group color. Use an HTML hex color code without the leading hash.",
            "example" : "4400FF",
            "exampleSetFlag" : true
          },
          "contact" : {
            "type" : "string",
            "description" : "The primary way to contact a responsible person or team. Preferably use an email address.",
            "example" : "johnson@acme.com",
            "exampleSetFlag" : true
          },
          "description" : {
            "type" : "string",
            "description" : "A brief description.",
            "exampleSetFlag" : false
          },
          "frameworks" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "The parts used to create the item. Usually refers to technical frameworks.",
              "example" : "java: 8",
              "exampleSetFlag" : true
            },
            "description" : "The parts used to create the item. Usually refers to technical frameworks.",
            "writeOnly" : true,
            "example" : "java: 8",
            "exampleSetFlag" : true
          },
          "group" : {
            "type" : "string",
            "description" : "The identifier of the group this item belongs in. Every item requires to be member of a group internally, so if nothing is given, the value is set to its layer.",
            "example" : "shipping",
            "exampleSetFlag" : true
          },
          "icon" : {
            "type" : "string",
            "description" : "An icon name or URL to set the displayed map icon. The default icon set is https://materialdesignicons.com/ and all names can be used (aliases do not work).",
            "exampleSetFlag" : false
          },
          "identifier" : {
            "pattern" : "^[\\w][\\w.:_-]{0,255}$",
            "type" : "string",
            "description" : "Immutable unique identifier (maybe use an URN). Primary means to identify items in searches.",
            "exampleSetFlag" : false
          },
          "interfaces" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "A collection of low level interfaces. Can be used to describe HTTP API endpoints for instance.",
            "exampleSetFlag" : false,
            "items" : {
              "$ref" : "#/components/schemas/InterfaceDescription"
            }
          },
          "labels" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "exampleSetFlag" : false
            },
            "writeOnly" : true,
            "exampleSetFlag" : false
          },
          "layer" : {
            "type" : "string",
            "description" : "The technical layer",
            "example" : "infrastructure",
            "exampleSetFlag" : true
          },
          "lifecycle" : {
            "type" : "string",
            "description" : "The lifecycle state of an item.",
            "writeOnly" : true,
            "exampleSetFlag" : false,
            "enum" : [ "PLANNED", "INTEGRATION", "TEST", "PRODUCTION", "END_OF_LIFE", "EOL" ]
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Link"
            },
            "description" : "Key-value pairs of related links. Some keys like 'github' cause that the endpoint data is parsed and added to to corresponding landscape component.",
            "example" : "github: https://github.com/dedica-team/nivio",
            "exampleSetFlag" : true
          },
          "name" : {
            "type" : "string",
            "description" : "A human readable name/title. The name is considered when items are searched.",
            "example" : "my beautiful service",
            "exampleSetFlag" : true
          },
          "owner" : {
            "type" : "string",
            "description" : "The business owner of the item. Preferably use an email address.",
            "example" : "johnson@acme.com",
            "exampleSetFlag" : true
          },
          "providedBy" : {
            "type" : "array",
            "description" : "A collection of identifiers which are providers for this item (i.e. hard dependencies that are required). This is a convenience field to build relations.",
            "example" : "shipping-mysqldb",
            "exampleSetFlag" : true,
            "items" : {
              "type" : "string",
              "description" : "A collection of identifiers which are providers for this item (i.e. hard dependencies that are required). This is a convenience field to build relations.",
              "example" : "shipping-mysqldb",
              "exampleSetFlag" : true
            }
          },
          "status" : {
            "type" : "array",
            "description" : "A list of statuses that works like hardcoded KPIs.",
            "writeOnly" : true,
            "exampleSetFlag" : false,
            "items" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string",
                "description" : "A list of statuses that works like hardcoded KPIs.",
                "exampleSetFlag" : false
              },
              "description" : "A list of statuses that works like hardcoded KPIs.",
              "exampleSetFlag" : false
            }
          },
          "statuses" : {
            "type" : "array",
            "description" : "A list of statuses that works like hardcoded KPIs.",
            "writeOnly" : true,
            "exampleSetFlag" : false,
            "items" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string",
                "description" : "A list of statuses that works like hardcoded KPIs.",
                "exampleSetFlag" : false
              },
              "description" : "A list of statuses that works like hardcoded KPIs.",
              "exampleSetFlag" : false
            }
          },
          "tags" : {
            "type" : "array",
            "exampleSetFlag" : false,
            "items" : {
              "type" : "string",
              "exampleSetFlag" : false
            }
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the item. A string describing its nature. If no icon is set, the type determines the displayed icon.",
            "example" : "service|database|volume",
            "exampleSetFlag" : true
          }
        },
        "description" : "List of configuration sources. Handled in the given order, latter extend/overwrite earlier values like items etc.",
        "exampleSetFlag" : false
      },
      "KPIConfig" : {
        "required" : [ "label" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Description of the purpose of the KPI",
            "exampleSetFlag" : false
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "A flag indicating that the KPI is active. Can be used to disable default KPIs.",
            "exampleSetFlag" : false
          },
          "label" : {
            "type" : "string",
            "description" : "Key of the label to evaluate",
            "example" : "costs",
            "exampleSetFlag" : true
          },
          "matches" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "A map of string based matchers that determine the resulting status (GREEN|YELLOW|ORANGE|RED|BROWN). Use a semicolon to separate matchers.",
              "example" : "RED: BAD;err.*",
              "exampleSetFlag" : true
            },
            "description" : "A map of string based matchers that determine the resulting status (GREEN|YELLOW|ORANGE|RED|BROWN). Use a semicolon to separate matchers.",
            "example" : "RED: BAD;err.*",
            "exampleSetFlag" : true
          },
          "messageTemplate" : {
            "type" : "string",
            "description" : "Template for the displayed message, containing a placeholder for the assessed value '%s",
            "example" : "The current value is: %s",
            "exampleSetFlag" : true
          },
          "ranges" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "A map of number based ranges that determine the resulting status (GREEN|YELLOW|ORANGE|RED|BROWN). Use a semicolon to separate upper and lower bounds. Tries to evaluate label values as numbers.",
              "example" : "GREEN: 0;99.999999",
              "exampleSetFlag" : true
            },
            "description" : "A map of number based ranges that determine the resulting status (GREEN|YELLOW|ORANGE|RED|BROWN). Use a semicolon to separate upper and lower bounds. Tries to evaluate label values as numbers.",
            "example" : "GREEN: 0;99.999999",
            "exampleSetFlag" : true
          }
        },
        "description" : "The configuration of landscape specific key performance indicators that derive status information from landscape components. Usually the KPIs work on labels",
        "exampleSetFlag" : false
      },
      "LandscapeConfig" : {
        "type" : "object",
        "properties" : {
          "branding" : {
            "$ref" : "#/components/schemas/Branding"
          },
          "greedy" : {
            "type" : "boolean",
            "description" : "Flag that enables instant creation items based relation targets that cannot be found in the sources.",
            "exampleSetFlag" : false
          },
          "groupBlacklist" : {
            "type" : "array",
            "description" : "Names or patterns of groups that should be excluded from the landscape. Used to improve automatic scanning results.",
            "example" : ".*infra.*",
            "exampleSetFlag" : true,
            "items" : {
              "type" : "string",
              "description" : "Names or patterns of groups that should be excluded from the landscape. Used to improve automatic scanning results.",
              "example" : ".*infra.*",
              "exampleSetFlag" : true
            }
          },
          "kpis" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/KPIConfig"
            },
            "description" : "Key performance indicator configs. Each KPI must have a unique identifier.",
            "exampleSetFlag" : false
          },
          "labelBlacklist" : {
            "type" : "array",
            "description" : "Names or patterns of labels that should be ignored. Used to improve automatic scanning results.",
            "example" : ".*COMPOSITION.*",
            "exampleSetFlag" : true,
            "items" : {
              "type" : "string",
              "description" : "Names or patterns of labels that should be ignored. Used to improve automatic scanning results.",
              "example" : ".*COMPOSITION.*",
              "exampleSetFlag" : true
            }
          },
          "layoutConfig" : {
            "$ref" : "#/components/schemas/LayoutConfig"
          }
        },
        "description" : "Configuration of key performance indicators (i.e. status indicators) and layouting tweaks.",
        "exampleSetFlag" : false
      },
      "LandscapeDescription" : {
        "required" : [ "identifier", "name" ],
        "type" : "object",
        "properties" : {
          "assignTemplates" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "exampleSetFlag" : false,
              "items" : {
                "type" : "string",
                "exampleSetFlag" : false
              }
            },
            "exampleSetFlag" : false
          },
          "color" : {
            "type" : "string",
            "exampleSetFlag" : false
          },
          "config" : {
            "$ref" : "#/components/schemas/LandscapeConfig"
          },
          "contact" : {
            "type" : "string",
            "description" : "Primary contact method, preferably an email address.",
            "exampleSetFlag" : false
          },
          "description" : {
            "type" : "string",
            "description" : "A brief description of the landscape.",
            "exampleSetFlag" : false
          },
          "groups" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/GroupDescription"
            },
            "description" : "Description of item groups (optional, can also be given in sources).",
            "exampleSetFlag" : false
          },
          "icon" : {
            "type" : "string",
            "description" : "An icon or logo url",
            "exampleSetFlag" : false
          },
          "identifier" : {
            "pattern" : "^[\\w][\\w.:_-]{0,255}$",
            "type" : "string",
            "description" : "Immutable unique identifier. Maybe use an URN.",
            "exampleSetFlag" : false
          },
          "items" : {
            "type" : "array",
            "description" : "List of configuration sources. Handled in the given order, latter extend/overwrite earlier values like items etc.",
            "writeOnly" : true,
            "exampleSetFlag" : false,
            "items" : {
              "$ref" : "#/components/schemas/ItemDescription"
            }
          },
          "labels" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "exampleSetFlag" : false
            },
            "writeOnly" : true,
            "exampleSetFlag" : false
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Link"
            },
            "description" : "Key-value pairs of related links. Some keys like 'github' cause that the endpoint data is parsed and added to to corresponding landscape component.",
            "example" : "github: https://github.com/dedica-team/nivio",
            "exampleSetFlag" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Human readable name.",
            "exampleSetFlag" : false
          },
          "owner" : {
            "type" : "string",
            "description" : "The business owner (person or team), preferably an email address.",
            "exampleSetFlag" : false
          },
          "partial" : {
            "type" : "boolean",
            "description" : "marks that the landscape is not complete, but an update",
            "exampleSetFlag" : false
          },
          "templates" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ItemDescription"
            },
            "description" : "Item descriptions to be used as templates. All values except identifier and name will be applied to the assigned items.",
            "exampleSetFlag" : false
          }
        },
        "exampleSetFlag" : false
      },
      "LayoutConfig" : {
        "type" : "object",
        "properties" : {
          "groupLayoutInitialTemp" : {
            "type" : "integer",
            "description" : "The initial temperature for layouts of groups.",
            "format" : "int32",
            "example" : 900,
            "exampleSetFlag" : true,
            "default" : 900
          },
          "groupMaxDistanceLimit" : {
            "type" : "integer",
            "description" : "A maximum distance between groups up to where forces are applied.",
            "format" : "int32",
            "example" : 1000,
            "exampleSetFlag" : true,
            "default" : 1000
          },
          "groupMinDistanceLimit" : {
            "type" : "integer",
            "description" : "The minimum distance between groups.",
            "format" : "int32",
            "example" : 50,
            "exampleSetFlag" : true,
            "default" : 50
          },
          "itemLayoutInitialTemp" : {
            "type" : "integer",
            "description" : "The initial temperature for layouts of items within groups.",
            "format" : "int32",
            "example" : 300,
            "exampleSetFlag" : true,
            "default" : 300
          },
          "itemMaxDistanceLimit" : {
            "type" : "integer",
            "description" : "A maximum distance between items up to where forces are applied.",
            "format" : "int32",
            "example" : 350,
            "exampleSetFlag" : true,
            "default" : 350
          },
          "itemMinDistanceLimit" : {
            "type" : "integer",
            "description" : "The minimum distance between items.",
            "format" : "int32",
            "example" : 100,
            "exampleSetFlag" : true,
            "default" : 100
          }
        },
        "description" : "Layout configuration for landscapes with unusual number or ratios of items, groups and relations.",
        "exampleSetFlag" : false
      },
      "Link" : {
        "required" : [ "href" ],
        "type" : "object",
        "properties" : {
          "basicAuthPassword" : {
            "type" : "string",
            "writeOnly" : true,
            "exampleSetFlag" : false
          },
          "basicAuthUsername" : {
            "type" : "string",
            "writeOnly" : true,
            "exampleSetFlag" : false
          },
          "deprecation" : {
            "type" : "string",
            "description" : "deprecation info (typically used in OpenAPI specs)",
            "exampleSetFlag" : false
          },
          "headerTokenName" : {
            "type" : "string",
            "writeOnly" : true,
            "exampleSetFlag" : false
          },
          "headerTokenValue" : {
            "type" : "string",
            "writeOnly" : true,
            "exampleSetFlag" : false
          },
          "href" : {
            "type" : "string",
            "description" : "The link target.",
            "format" : "url",
            "exampleSetFlag" : false
          },
          "hreflang" : {
            "type" : "string",
            "description" : "hateoas language",
            "exampleSetFlag" : false
          },
          "media" : {
            "type" : "string",
            "description" : "hateoas media type",
            "exampleSetFlag" : false
          },
          "name" : {
            "type" : "string",
            "description" : "HateOAS / OpenAPI name",
            "exampleSetFlag" : false
          },
          "rel" : {
            "type" : "string",
            "description" : "hateoas relation type",
            "exampleSetFlag" : false
          },
          "title" : {
            "type" : "string",
            "description" : "hateoas title",
            "exampleSetFlag" : false
          },
          "type" : {
            "type" : "string",
            "exampleSetFlag" : false
          }
        },
        "description" : "A link to an external resource. Contains a href (URL) plus various attributes for authentication and/or hateoas.",
        "example" : "github: https://github.com/dedica-team/nivio",
        "exampleSetFlag" : true
      }
    }
  }
}